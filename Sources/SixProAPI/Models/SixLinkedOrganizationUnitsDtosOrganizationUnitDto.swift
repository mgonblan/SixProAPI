//
// SixLinkedOrganizationUnitsDtosOrganizationUnitDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public struct SixLinkedOrganizationUnitsDtosOrganizationUnitDto: Codable, Hashable {

    public var id: UUID?
    public var creationTime: Date?
    public var creatorId: UUID?
    public var lastModificationTime: Date?
    public var lastModifierId: UUID?
    public var parentId: UUID?
    public var code: String?
    public var displayName: String?
    public var memberCount: Int?
    public var users: [SixLinkedOrganizationUnitsDtosOrganizationUnitUserListDto]?

    public init(id: UUID? = nil, creationTime: Date? = nil, creatorId: UUID? = nil, lastModificationTime: Date? = nil, lastModifierId: UUID? = nil, parentId: UUID? = nil, code: String? = nil, displayName: String? = nil, memberCount: Int? = nil, users: [SixLinkedOrganizationUnitsDtosOrganizationUnitUserListDto]? = nil) {
        self.id = id
        self.creationTime = creationTime
        self.creatorId = creatorId
        self.lastModificationTime = lastModificationTime
        self.lastModifierId = lastModifierId
        self.parentId = parentId
        self.code = code
        self.displayName = displayName
        self.memberCount = memberCount
        self.users = users
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case creationTime
        case creatorId
        case lastModificationTime
        case lastModifierId
        case parentId
        case code
        case displayName
        case memberCount
        case users
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(creationTime, forKey: .creationTime)
        try container.encodeIfPresent(creatorId, forKey: .creatorId)
        try container.encodeIfPresent(lastModificationTime, forKey: .lastModificationTime)
        try container.encodeIfPresent(lastModifierId, forKey: .lastModifierId)
        try container.encodeIfPresent(parentId, forKey: .parentId)
        try container.encodeIfPresent(code, forKey: .code)
        try container.encodeIfPresent(displayName, forKey: .displayName)
        try container.encodeIfPresent(memberCount, forKey: .memberCount)
        try container.encodeIfPresent(users, forKey: .users)
    }



}
