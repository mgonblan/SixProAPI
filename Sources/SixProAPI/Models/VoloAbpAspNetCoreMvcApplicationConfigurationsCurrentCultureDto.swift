//
// VoloAbpAspNetCoreMvcApplicationConfigurationsCurrentCultureDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public struct VoloAbpAspNetCoreMvcApplicationConfigurationsCurrentCultureDto: Codable, Hashable {

    public var displayName: String?
    public var englishName: String?
    public var threeLetterIsoLanguageName: String?
    public var twoLetterIsoLanguageName: String?
    public var isRightToLeft: Bool?
    public var cultureName: String?
    public var name: String?
    public var nativeName: String?
    public var dateTimeFormat: VoloAbpAspNetCoreMvcApplicationConfigurationsDateTimeFormatDto?

    public init(displayName: String? = nil, englishName: String? = nil, threeLetterIsoLanguageName: String? = nil, twoLetterIsoLanguageName: String? = nil, isRightToLeft: Bool? = nil, cultureName: String? = nil, name: String? = nil, nativeName: String? = nil, dateTimeFormat: VoloAbpAspNetCoreMvcApplicationConfigurationsDateTimeFormatDto? = nil) {
        self.displayName = displayName
        self.englishName = englishName
        self.threeLetterIsoLanguageName = threeLetterIsoLanguageName
        self.twoLetterIsoLanguageName = twoLetterIsoLanguageName
        self.isRightToLeft = isRightToLeft
        self.cultureName = cultureName
        self.name = name
        self.nativeName = nativeName
        self.dateTimeFormat = dateTimeFormat
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case displayName
        case englishName
        case threeLetterIsoLanguageName
        case twoLetterIsoLanguageName
        case isRightToLeft
        case cultureName
        case name
        case nativeName
        case dateTimeFormat
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(displayName, forKey: .displayName)
        try container.encodeIfPresent(englishName, forKey: .englishName)
        try container.encodeIfPresent(threeLetterIsoLanguageName, forKey: .threeLetterIsoLanguageName)
        try container.encodeIfPresent(twoLetterIsoLanguageName, forKey: .twoLetterIsoLanguageName)
        try container.encodeIfPresent(isRightToLeft, forKey: .isRightToLeft)
        try container.encodeIfPresent(cultureName, forKey: .cultureName)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(nativeName, forKey: .nativeName)
        try container.encodeIfPresent(dateTimeFormat, forKey: .dateTimeFormat)
    }



}
