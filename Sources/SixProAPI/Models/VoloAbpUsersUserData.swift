//
// VoloAbpUsersUserData.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public struct VoloAbpUsersUserData: Codable, Hashable {

    public var id: UUID?
    public var tenantId: UUID?
    public var userName: String?
    public var name: String?
    public var surname: String?
    public var email: String?
    public var emailConfirmed: Bool?
    public var phoneNumber: String?
    public var phoneNumberConfirmed: Bool?

    public init(id: UUID? = nil, tenantId: UUID? = nil, userName: String? = nil, name: String? = nil, surname: String? = nil, email: String? = nil, emailConfirmed: Bool? = nil, phoneNumber: String? = nil, phoneNumberConfirmed: Bool? = nil) {
        self.id = id
        self.tenantId = tenantId
        self.userName = userName
        self.name = name
        self.surname = surname
        self.email = email
        self.emailConfirmed = emailConfirmed
        self.phoneNumber = phoneNumber
        self.phoneNumberConfirmed = phoneNumberConfirmed
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case tenantId
        case userName
        case name
        case surname
        case email
        case emailConfirmed
        case phoneNumber
        case phoneNumberConfirmed
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(tenantId, forKey: .tenantId)
        try container.encodeIfPresent(userName, forKey: .userName)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(surname, forKey: .surname)
        try container.encodeIfPresent(email, forKey: .email)
        try container.encodeIfPresent(emailConfirmed, forKey: .emailConfirmed)
        try container.encodeIfPresent(phoneNumber, forKey: .phoneNumber)
        try container.encodeIfPresent(phoneNumberConfirmed, forKey: .phoneNumberConfirmed)
    }



}
