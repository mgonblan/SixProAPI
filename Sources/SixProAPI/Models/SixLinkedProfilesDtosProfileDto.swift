//
// SixLinkedProfilesDtosProfileDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public struct SixLinkedProfilesDtosProfileDto: Codable, Hashable {

    public var id: UUID?
    public var creationTime: Date?
    public var creatorId: UUID?
    public var lastModificationTime: Date?
    public var lastModifierId: UUID?
    public var isDeleted: Bool?
    public var deleterId: UUID?
    public var deletionTime: Date?
    public var userId: UUID?
    public var user: SixLinkedUsersDtosExtendedIdentityUserDto?
    public var publicProfileId: UUID?
    public var jobTitle: String?
    public var shortBio: String?
    public var slug: String?
    public var isVerified: Bool?
    public var isPublic: Bool?
    public var categoryId: UUID?
    public var category: SixLinkedCategoriesDtosCategoryDto?
    public var addressId: UUID?
    public var address: SixLinkedAddressesDtosAddressDto?
    public var studies: [SixLinkedStudiesDtosStudyDto]?
    public var languages: [SixLinkedProfilesDtosProfileLanguageDto]?
    public var workExperiences: [SixLinkedWorkExperiencesDtosWorkExperienceDto]?
    public var skills: [SixLinkedProfilesDtosProfileSkillDto]?
    public var ratings: [SixLinkedUserRatingsDtosUserRatingDto]?

    public init(id: UUID? = nil, creationTime: Date? = nil, creatorId: UUID? = nil, lastModificationTime: Date? = nil, lastModifierId: UUID? = nil, isDeleted: Bool? = nil, deleterId: UUID? = nil, deletionTime: Date? = nil, userId: UUID? = nil, user: SixLinkedUsersDtosExtendedIdentityUserDto? = nil, publicProfileId: UUID? = nil, jobTitle: String? = nil, shortBio: String? = nil, slug: String? = nil, isVerified: Bool? = nil, isPublic: Bool? = nil, categoryId: UUID? = nil, category: SixLinkedCategoriesDtosCategoryDto? = nil, addressId: UUID? = nil, address: SixLinkedAddressesDtosAddressDto? = nil, studies: [SixLinkedStudiesDtosStudyDto]? = nil, languages: [SixLinkedProfilesDtosProfileLanguageDto]? = nil, workExperiences: [SixLinkedWorkExperiencesDtosWorkExperienceDto]? = nil, skills: [SixLinkedProfilesDtosProfileSkillDto]? = nil, ratings: [SixLinkedUserRatingsDtosUserRatingDto]? = nil) {
        self.id = id
        self.creationTime = creationTime
        self.creatorId = creatorId
        self.lastModificationTime = lastModificationTime
        self.lastModifierId = lastModifierId
        self.isDeleted = isDeleted
        self.deleterId = deleterId
        self.deletionTime = deletionTime
        self.userId = userId
        self.user = user
        self.publicProfileId = publicProfileId
        self.jobTitle = jobTitle
        self.shortBio = shortBio
        self.slug = slug
        self.isVerified = isVerified
        self.isPublic = isPublic
        self.categoryId = categoryId
        self.category = category
        self.addressId = addressId
        self.address = address
        self.studies = studies
        self.languages = languages
        self.workExperiences = workExperiences
        self.skills = skills
        self.ratings = ratings
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case creationTime
        case creatorId
        case lastModificationTime
        case lastModifierId
        case isDeleted
        case deleterId
        case deletionTime
        case userId
        case user
        case publicProfileId
        case jobTitle
        case shortBio
        case slug
        case isVerified
        case isPublic
        case categoryId
        case category
        case addressId
        case address
        case studies
        case languages
        case workExperiences
        case skills
        case ratings
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(creationTime, forKey: .creationTime)
        try container.encodeIfPresent(creatorId, forKey: .creatorId)
        try container.encodeIfPresent(lastModificationTime, forKey: .lastModificationTime)
        try container.encodeIfPresent(lastModifierId, forKey: .lastModifierId)
        try container.encodeIfPresent(isDeleted, forKey: .isDeleted)
        try container.encodeIfPresent(deleterId, forKey: .deleterId)
        try container.encodeIfPresent(deletionTime, forKey: .deletionTime)
        try container.encodeIfPresent(userId, forKey: .userId)
        try container.encodeIfPresent(user, forKey: .user)
        try container.encodeIfPresent(publicProfileId, forKey: .publicProfileId)
        try container.encodeIfPresent(jobTitle, forKey: .jobTitle)
        try container.encodeIfPresent(shortBio, forKey: .shortBio)
        try container.encodeIfPresent(slug, forKey: .slug)
        try container.encodeIfPresent(isVerified, forKey: .isVerified)
        try container.encodeIfPresent(isPublic, forKey: .isPublic)
        try container.encodeIfPresent(categoryId, forKey: .categoryId)
        try container.encodeIfPresent(category, forKey: .category)
        try container.encodeIfPresent(addressId, forKey: .addressId)
        try container.encodeIfPresent(address, forKey: .address)
        try container.encodeIfPresent(studies, forKey: .studies)
        try container.encodeIfPresent(languages, forKey: .languages)
        try container.encodeIfPresent(workExperiences, forKey: .workExperiences)
        try container.encodeIfPresent(skills, forKey: .skills)
        try container.encodeIfPresent(ratings, forKey: .ratings)
    }



}
