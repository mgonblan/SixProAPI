//
// VoloAbpHttpModelingTypeApiDescriptionModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public struct VoloAbpHttpModelingTypeApiDescriptionModel: Codable, Hashable {

    public var baseType: String?
    public var isEnum: Bool?
    public var enumNames: [String]?
    public var enumValues: [AnyCodable]?
    public var genericArguments: [String]?
    public var properties: [VoloAbpHttpModelingPropertyApiDescriptionModel]?

    public init(baseType: String? = nil, isEnum: Bool? = nil, enumNames: [String]? = nil, enumValues: [AnyCodable]? = nil, genericArguments: [String]? = nil, properties: [VoloAbpHttpModelingPropertyApiDescriptionModel]? = nil) {
        self.baseType = baseType
        self.isEnum = isEnum
        self.enumNames = enumNames
        self.enumValues = enumValues
        self.genericArguments = genericArguments
        self.properties = properties
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case baseType
        case isEnum
        case enumNames
        case enumValues
        case genericArguments
        case properties
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(baseType, forKey: .baseType)
        try container.encodeIfPresent(isEnum, forKey: .isEnum)
        try container.encodeIfPresent(enumNames, forKey: .enumNames)
        try container.encodeIfPresent(enumValues, forKey: .enumValues)
        try container.encodeIfPresent(genericArguments, forKey: .genericArguments)
        try container.encodeIfPresent(properties, forKey: .properties)
    }



}
