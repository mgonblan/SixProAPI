//
// VoloAbpAspNetCoreMvcApplicationConfigurationsObjectExtendingExtensionPropertyUiLookupDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public struct VoloAbpAspNetCoreMvcApplicationConfigurationsObjectExtendingExtensionPropertyUiLookupDto: Codable, Hashable {

    public var url: String?
    public var resultListPropertyName: String?
    public var displayPropertyName: String?
    public var valuePropertyName: String?
    public var filterParamName: String?

    public init(url: String? = nil, resultListPropertyName: String? = nil, displayPropertyName: String? = nil, valuePropertyName: String? = nil, filterParamName: String? = nil) {
        self.url = url
        self.resultListPropertyName = resultListPropertyName
        self.displayPropertyName = displayPropertyName
        self.valuePropertyName = valuePropertyName
        self.filterParamName = filterParamName
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case url
        case resultListPropertyName
        case displayPropertyName
        case valuePropertyName
        case filterParamName
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(url, forKey: .url)
        try container.encodeIfPresent(resultListPropertyName, forKey: .resultListPropertyName)
        try container.encodeIfPresent(displayPropertyName, forKey: .displayPropertyName)
        try container.encodeIfPresent(valuePropertyName, forKey: .valuePropertyName)
        try container.encodeIfPresent(filterParamName, forKey: .filterParamName)
    }



}
