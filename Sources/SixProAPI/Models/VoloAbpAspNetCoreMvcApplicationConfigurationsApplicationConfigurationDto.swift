//
// VoloAbpAspNetCoreMvcApplicationConfigurationsApplicationConfigurationDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public struct VoloAbpAspNetCoreMvcApplicationConfigurationsApplicationConfigurationDto: Codable, Hashable {

    public var localization: VoloAbpAspNetCoreMvcApplicationConfigurationsApplicationLocalizationConfigurationDto?
    public var auth: VoloAbpAspNetCoreMvcApplicationConfigurationsApplicationAuthConfigurationDto?
    public var setting: VoloAbpAspNetCoreMvcApplicationConfigurationsApplicationSettingConfigurationDto?
    public var currentUser: VoloAbpAspNetCoreMvcApplicationConfigurationsCurrentUserDto?
    public var features: VoloAbpAspNetCoreMvcApplicationConfigurationsApplicationFeatureConfigurationDto?
    public var multiTenancy: VoloAbpAspNetCoreMvcMultiTenancyMultiTenancyInfoDto?
    public var currentTenant: VoloAbpAspNetCoreMvcMultiTenancyCurrentTenantDto?
    public var timing: VoloAbpAspNetCoreMvcApplicationConfigurationsTimingDto?
    public var clock: VoloAbpAspNetCoreMvcApplicationConfigurationsClockDto?
    public var objectExtensions: VoloAbpAspNetCoreMvcApplicationConfigurationsObjectExtendingObjectExtensionsDto?

    public init(localization: VoloAbpAspNetCoreMvcApplicationConfigurationsApplicationLocalizationConfigurationDto? = nil, auth: VoloAbpAspNetCoreMvcApplicationConfigurationsApplicationAuthConfigurationDto? = nil, setting: VoloAbpAspNetCoreMvcApplicationConfigurationsApplicationSettingConfigurationDto? = nil, currentUser: VoloAbpAspNetCoreMvcApplicationConfigurationsCurrentUserDto? = nil, features: VoloAbpAspNetCoreMvcApplicationConfigurationsApplicationFeatureConfigurationDto? = nil, multiTenancy: VoloAbpAspNetCoreMvcMultiTenancyMultiTenancyInfoDto? = nil, currentTenant: VoloAbpAspNetCoreMvcMultiTenancyCurrentTenantDto? = nil, timing: VoloAbpAspNetCoreMvcApplicationConfigurationsTimingDto? = nil, clock: VoloAbpAspNetCoreMvcApplicationConfigurationsClockDto? = nil, objectExtensions: VoloAbpAspNetCoreMvcApplicationConfigurationsObjectExtendingObjectExtensionsDto? = nil) {
        self.localization = localization
        self.auth = auth
        self.setting = setting
        self.currentUser = currentUser
        self.features = features
        self.multiTenancy = multiTenancy
        self.currentTenant = currentTenant
        self.timing = timing
        self.clock = clock
        self.objectExtensions = objectExtensions
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case localization
        case auth
        case setting
        case currentUser
        case features
        case multiTenancy
        case currentTenant
        case timing
        case clock
        case objectExtensions
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(localization, forKey: .localization)
        try container.encodeIfPresent(auth, forKey: .auth)
        try container.encodeIfPresent(setting, forKey: .setting)
        try container.encodeIfPresent(currentUser, forKey: .currentUser)
        try container.encodeIfPresent(features, forKey: .features)
        try container.encodeIfPresent(multiTenancy, forKey: .multiTenancy)
        try container.encodeIfPresent(currentTenant, forKey: .currentTenant)
        try container.encodeIfPresent(timing, forKey: .timing)
        try container.encodeIfPresent(clock, forKey: .clock)
        try container.encodeIfPresent(objectExtensions, forKey: .objectExtensions)
    }



}
