//
// SixLinkedProjectsDtosCreateUpdateProjectDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

public struct SixLinkedProjectsDtosCreateUpdateProjectDto: Codable, Hashable {

    public var companyId: UUID?
    public var publicationId: UUID?
    public var categoryId: UUID?
    public var title: String?
    public var description: String?
    public var content: String?
    public var projectStartDate: Date?
    public var projectEndDate: Date?
    public var status: SixLinkedProjectsProjectStatus?

    public init(companyId: UUID? = nil, publicationId: UUID? = nil, categoryId: UUID? = nil, title: String? = nil, description: String? = nil, content: String? = nil, projectStartDate: Date? = nil, projectEndDate: Date? = nil, status: SixLinkedProjectsProjectStatus? = nil) {
        self.companyId = companyId
        self.publicationId = publicationId
        self.categoryId = categoryId
        self.title = title
        self.description = description
        self.content = content
        self.projectStartDate = projectStartDate
        self.projectEndDate = projectEndDate
        self.status = status
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case companyId
        case publicationId
        case categoryId
        case title
        case description
        case content
        case projectStartDate
        case projectEndDate
        case status
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(companyId, forKey: .companyId)
        try container.encodeIfPresent(publicationId, forKey: .publicationId)
        try container.encodeIfPresent(categoryId, forKey: .categoryId)
        try container.encodeIfPresent(title, forKey: .title)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(content, forKey: .content)
        try container.encodeIfPresent(projectStartDate, forKey: .projectStartDate)
        try container.encodeIfPresent(projectEndDate, forKey: .projectEndDate)
        try container.encodeIfPresent(status, forKey: .status)
    }



}
