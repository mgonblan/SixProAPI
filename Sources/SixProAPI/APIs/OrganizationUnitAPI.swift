//
// OrganizationUnitAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(Combine)
import Combine
#endif

open class OrganizationUnitAPI {
    /**

     - parameter sixLinkedOrganizationUnitsDtosFindOrganizationUnitUsersInput: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - returns: AnyPublisher<VoloAbpApplicationDtosPagedResultDto1SixLinkedOrganizationUnitsDtosOrganizationUnitUserListDtoSixLinkedApplicationContractsVersion1000CultureneutralPublicKeyTokennull, Error>
     */
    #if canImport(Combine)
    @available(OSX 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiAppOrganizationUnitFindUsersPost(sixLinkedOrganizationUnitsDtosFindOrganizationUnitUsersInput: SixLinkedOrganizationUnitsDtosFindOrganizationUnitUsersInput? = nil, apiResponseQueue: DispatchQueue = SixProApiAPI.apiResponseQueue) -> AnyPublisher<VoloAbpApplicationDtosPagedResultDto1SixLinkedOrganizationUnitsDtosOrganizationUnitUserListDtoSixLinkedApplicationContractsVersion1000CultureneutralPublicKeyTokennull, Error> {
        return Future<VoloAbpApplicationDtosPagedResultDto1SixLinkedOrganizationUnitsDtosOrganizationUnitUserListDtoSixLinkedApplicationContractsVersion1000CultureneutralPublicKeyTokennull, Error>.init { promise in
            apiAppOrganizationUnitFindUsersPostWithRequestBuilder(sixLinkedOrganizationUnitsDtosFindOrganizationUnitUsersInput: sixLinkedOrganizationUnitsDtosFindOrganizationUnitUsersInput).execute(apiResponseQueue) { result -> Void in
                switch result {
                case let .success(response):
                    promise(.success(response.body!))
                case let .failure(error):
                    promise(.failure(error))
                }
            }
        }.eraseToAnyPublisher()
    }
    #endif

    /**
     - POST /api/app/organization-unit/find-users
     - parameter sixLinkedOrganizationUnitsDtosFindOrganizationUnitUsersInput: (body)  (optional)
     - returns: RequestBuilder<VoloAbpApplicationDtosPagedResultDto1SixLinkedOrganizationUnitsDtosOrganizationUnitUserListDtoSixLinkedApplicationContractsVersion1000CultureneutralPublicKeyTokennull> 
     */
    open class func apiAppOrganizationUnitFindUsersPostWithRequestBuilder(sixLinkedOrganizationUnitsDtosFindOrganizationUnitUsersInput: SixLinkedOrganizationUnitsDtosFindOrganizationUnitUsersInput? = nil) -> RequestBuilder<VoloAbpApplicationDtosPagedResultDto1SixLinkedOrganizationUnitsDtosOrganizationUnitUserListDtoSixLinkedApplicationContractsVersion1000CultureneutralPublicKeyTokennull> {
        let path = "/api/app/organization-unit/find-users"
        let URLString = SixProApiAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: sixLinkedOrganizationUnitsDtosFindOrganizationUnitUsersInput)

        let urlComponents = URLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<VoloAbpApplicationDtosPagedResultDto1SixLinkedOrganizationUnitsDtosOrganizationUnitUserListDtoSixLinkedApplicationContractsVersion1000CultureneutralPublicKeyTokennull>.Type = SixProApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

    /**

     - parameter id: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - returns: AnyPublisher<SixLinkedOrganizationUnitsDtosOrganizationUnitDto, Error>
     */
    #if canImport(Combine)
    @available(OSX 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiAppOrganizationUnitIdFindByIdPost(id: UUID, apiResponseQueue: DispatchQueue = SixProApiAPI.apiResponseQueue) -> AnyPublisher<SixLinkedOrganizationUnitsDtosOrganizationUnitDto, Error> {
        return Future<SixLinkedOrganizationUnitsDtosOrganizationUnitDto, Error>.init { promise in
            apiAppOrganizationUnitIdFindByIdPostWithRequestBuilder(id: id).execute(apiResponseQueue) { result -> Void in
                switch result {
                case let .success(response):
                    promise(.success(response.body!))
                case let .failure(error):
                    promise(.failure(error))
                }
            }
        }.eraseToAnyPublisher()
    }
    #endif

    /**
     - POST /api/app/organization-unit/{id}/find-by-id
     - parameter id: (path)  
     - returns: RequestBuilder<SixLinkedOrganizationUnitsDtosOrganizationUnitDto> 
     */
    open class func apiAppOrganizationUnitIdFindByIdPostWithRequestBuilder(id: UUID) -> RequestBuilder<SixLinkedOrganizationUnitsDtosOrganizationUnitDto> {
        var path = "/api/app/organization-unit/{id}/find-by-id"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let URLString = SixProApiAPI.basePath + path
        let parameters: [String: Any]? = nil

        let urlComponents = URLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<SixLinkedOrganizationUnitsDtosOrganizationUnitDto>.Type = SixProApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

    /**

     - parameter id: (path)  
     - parameter recursive: (query)  (optional, default to false)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - returns: AnyPublisher<[SixLinkedOrganizationUnitsDtosOrganizationUnitDto], Error>
     */
    #if canImport(Combine)
    @available(OSX 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiAppOrganizationUnitIdFindChildrenPost(id: UUID, recursive: Bool? = nil, apiResponseQueue: DispatchQueue = SixProApiAPI.apiResponseQueue) -> AnyPublisher<[SixLinkedOrganizationUnitsDtosOrganizationUnitDto], Error> {
        return Future<[SixLinkedOrganizationUnitsDtosOrganizationUnitDto], Error>.init { promise in
            apiAppOrganizationUnitIdFindChildrenPostWithRequestBuilder(id: id, recursive: recursive).execute(apiResponseQueue) { result -> Void in
                switch result {
                case let .success(response):
                    promise(.success(response.body!))
                case let .failure(error):
                    promise(.failure(error))
                }
            }
        }.eraseToAnyPublisher()
    }
    #endif

    /**
     - POST /api/app/organization-unit/{id}/find-children
     - parameter id: (path)  
     - parameter recursive: (query)  (optional, default to false)
     - returns: RequestBuilder<[SixLinkedOrganizationUnitsDtosOrganizationUnitDto]> 
     */
    open class func apiAppOrganizationUnitIdFindChildrenPostWithRequestBuilder(id: UUID, recursive: Bool? = nil) -> RequestBuilder<[SixLinkedOrganizationUnitsDtosOrganizationUnitDto]> {
        var path = "/api/app/organization-unit/{id}/find-children"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let URLString = SixProApiAPI.basePath + path
        let parameters: [String: Any]? = nil

        var urlComponents = URLComponents(string: URLString)
        urlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "recursive": recursive?.encodeToJSON(),
        ])

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[SixLinkedOrganizationUnitsDtosOrganizationUnitDto]>.Type = SixProApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

    /**

     - parameter id: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - returns: AnyPublisher<Void, Error>
     */
    #if canImport(Combine)
    @available(OSX 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiAppOrganizationUnitIdOrganizationUnitDelete(id: UUID, apiResponseQueue: DispatchQueue = SixProApiAPI.apiResponseQueue) -> AnyPublisher<Void, Error> {
        return Future<Void, Error>.init { promise in
            apiAppOrganizationUnitIdOrganizationUnitDeleteWithRequestBuilder(id: id).execute(apiResponseQueue) { result -> Void in
                switch result {
                case .success:
                    promise(.success(()))
                case let .failure(error):
                    promise(.failure(error))
                }
            }
        }.eraseToAnyPublisher()
    }
    #endif

    /**
     - DELETE /api/app/organization-unit/{id}/organization-unit
     - parameter id: (path)  
     - returns: RequestBuilder<Void> 
     */
    open class func apiAppOrganizationUnitIdOrganizationUnitDeleteWithRequestBuilder(id: UUID) -> RequestBuilder<Void> {
        var path = "/api/app/organization-unit/{id}/organization-unit"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let URLString = SixProApiAPI.basePath + path
        let parameters: [String: Any]? = nil

        let urlComponents = URLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SixProApiAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

    /**

     - parameter sixLinkedOrganizationUnitsDtosMoveOrganizationUnitInput: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - returns: AnyPublisher<SixLinkedOrganizationUnitsDtosOrganizationUnitDto, Error>
     */
    #if canImport(Combine)
    @available(OSX 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiAppOrganizationUnitMoveOrganizationUnitPost(sixLinkedOrganizationUnitsDtosMoveOrganizationUnitInput: SixLinkedOrganizationUnitsDtosMoveOrganizationUnitInput? = nil, apiResponseQueue: DispatchQueue = SixProApiAPI.apiResponseQueue) -> AnyPublisher<SixLinkedOrganizationUnitsDtosOrganizationUnitDto, Error> {
        return Future<SixLinkedOrganizationUnitsDtosOrganizationUnitDto, Error>.init { promise in
            apiAppOrganizationUnitMoveOrganizationUnitPostWithRequestBuilder(sixLinkedOrganizationUnitsDtosMoveOrganizationUnitInput: sixLinkedOrganizationUnitsDtosMoveOrganizationUnitInput).execute(apiResponseQueue) { result -> Void in
                switch result {
                case let .success(response):
                    promise(.success(response.body!))
                case let .failure(error):
                    promise(.failure(error))
                }
            }
        }.eraseToAnyPublisher()
    }
    #endif

    /**
     - POST /api/app/organization-unit/move-organization-unit
     - parameter sixLinkedOrganizationUnitsDtosMoveOrganizationUnitInput: (body)  (optional)
     - returns: RequestBuilder<SixLinkedOrganizationUnitsDtosOrganizationUnitDto> 
     */
    open class func apiAppOrganizationUnitMoveOrganizationUnitPostWithRequestBuilder(sixLinkedOrganizationUnitsDtosMoveOrganizationUnitInput: SixLinkedOrganizationUnitsDtosMoveOrganizationUnitInput? = nil) -> RequestBuilder<SixLinkedOrganizationUnitsDtosOrganizationUnitDto> {
        let path = "/api/app/organization-unit/move-organization-unit"
        let URLString = SixProApiAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: sixLinkedOrganizationUnitsDtosMoveOrganizationUnitInput)

        let urlComponents = URLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<SixLinkedOrganizationUnitsDtosOrganizationUnitDto>.Type = SixProApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

    /**

     - parameter sixLinkedOrganizationUnitsDtosCreateOrganizationUnitInput: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - returns: AnyPublisher<SixLinkedOrganizationUnitsDtosOrganizationUnitDto, Error>
     */
    #if canImport(Combine)
    @available(OSX 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiAppOrganizationUnitOrganizationUnitPost(sixLinkedOrganizationUnitsDtosCreateOrganizationUnitInput: SixLinkedOrganizationUnitsDtosCreateOrganizationUnitInput? = nil, apiResponseQueue: DispatchQueue = SixProApiAPI.apiResponseQueue) -> AnyPublisher<SixLinkedOrganizationUnitsDtosOrganizationUnitDto, Error> {
        return Future<SixLinkedOrganizationUnitsDtosOrganizationUnitDto, Error>.init { promise in
            apiAppOrganizationUnitOrganizationUnitPostWithRequestBuilder(sixLinkedOrganizationUnitsDtosCreateOrganizationUnitInput: sixLinkedOrganizationUnitsDtosCreateOrganizationUnitInput).execute(apiResponseQueue) { result -> Void in
                switch result {
                case let .success(response):
                    promise(.success(response.body!))
                case let .failure(error):
                    promise(.failure(error))
                }
            }
        }.eraseToAnyPublisher()
    }
    #endif

    /**
     - POST /api/app/organization-unit/organization-unit
     - parameter sixLinkedOrganizationUnitsDtosCreateOrganizationUnitInput: (body)  (optional)
     - returns: RequestBuilder<SixLinkedOrganizationUnitsDtosOrganizationUnitDto> 
     */
    open class func apiAppOrganizationUnitOrganizationUnitPostWithRequestBuilder(sixLinkedOrganizationUnitsDtosCreateOrganizationUnitInput: SixLinkedOrganizationUnitsDtosCreateOrganizationUnitInput? = nil) -> RequestBuilder<SixLinkedOrganizationUnitsDtosOrganizationUnitDto> {
        let path = "/api/app/organization-unit/organization-unit"
        let URLString = SixProApiAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: sixLinkedOrganizationUnitsDtosCreateOrganizationUnitInput)

        let urlComponents = URLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<SixLinkedOrganizationUnitsDtosOrganizationUnitDto>.Type = SixProApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

    /**

     - parameter sixLinkedOrganizationUnitsDtosUpdateOrganizationUnitInput: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - returns: AnyPublisher<SixLinkedOrganizationUnitsDtosOrganizationUnitDto, Error>
     */
    #if canImport(Combine)
    @available(OSX 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiAppOrganizationUnitOrganizationUnitPut(sixLinkedOrganizationUnitsDtosUpdateOrganizationUnitInput: SixLinkedOrganizationUnitsDtosUpdateOrganizationUnitInput? = nil, apiResponseQueue: DispatchQueue = SixProApiAPI.apiResponseQueue) -> AnyPublisher<SixLinkedOrganizationUnitsDtosOrganizationUnitDto, Error> {
        return Future<SixLinkedOrganizationUnitsDtosOrganizationUnitDto, Error>.init { promise in
            apiAppOrganizationUnitOrganizationUnitPutWithRequestBuilder(sixLinkedOrganizationUnitsDtosUpdateOrganizationUnitInput: sixLinkedOrganizationUnitsDtosUpdateOrganizationUnitInput).execute(apiResponseQueue) { result -> Void in
                switch result {
                case let .success(response):
                    promise(.success(response.body!))
                case let .failure(error):
                    promise(.failure(error))
                }
            }
        }.eraseToAnyPublisher()
    }
    #endif

    /**
     - PUT /api/app/organization-unit/organization-unit
     - parameter sixLinkedOrganizationUnitsDtosUpdateOrganizationUnitInput: (body)  (optional)
     - returns: RequestBuilder<SixLinkedOrganizationUnitsDtosOrganizationUnitDto> 
     */
    open class func apiAppOrganizationUnitOrganizationUnitPutWithRequestBuilder(sixLinkedOrganizationUnitsDtosUpdateOrganizationUnitInput: SixLinkedOrganizationUnitsDtosUpdateOrganizationUnitInput? = nil) -> RequestBuilder<SixLinkedOrganizationUnitsDtosOrganizationUnitDto> {
        let path = "/api/app/organization-unit/organization-unit"
        let URLString = SixProApiAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: sixLinkedOrganizationUnitsDtosUpdateOrganizationUnitInput)

        let urlComponents = URLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<SixLinkedOrganizationUnitsDtosOrganizationUnitDto>.Type = SixProApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

    /**

     - parameter userId: (path)  
     - parameter includeChildren: (query)  (optional, default to false)
     - parameter recursive: (query)  (optional, default to true)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - returns: AnyPublisher<[SixLinkedOrganizationUnitsDtosOrganizationUnitDto], Error>
     */
    #if canImport(Combine)
    @available(OSX 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiAppOrganizationUnitOrganizationUnitsByUserUserIdGet(userId: UUID, includeChildren: Bool? = nil, recursive: Bool? = nil, apiResponseQueue: DispatchQueue = SixProApiAPI.apiResponseQueue) -> AnyPublisher<[SixLinkedOrganizationUnitsDtosOrganizationUnitDto], Error> {
        return Future<[SixLinkedOrganizationUnitsDtosOrganizationUnitDto], Error>.init { promise in
            apiAppOrganizationUnitOrganizationUnitsByUserUserIdGetWithRequestBuilder(userId: userId, includeChildren: includeChildren, recursive: recursive).execute(apiResponseQueue) { result -> Void in
                switch result {
                case let .success(response):
                    promise(.success(response.body!))
                case let .failure(error):
                    promise(.failure(error))
                }
            }
        }.eraseToAnyPublisher()
    }
    #endif

    /**
     - GET /api/app/organization-unit/organization-units-by-user/{userId}
     - parameter userId: (path)  
     - parameter includeChildren: (query)  (optional, default to false)
     - parameter recursive: (query)  (optional, default to true)
     - returns: RequestBuilder<[SixLinkedOrganizationUnitsDtosOrganizationUnitDto]> 
     */
    open class func apiAppOrganizationUnitOrganizationUnitsByUserUserIdGetWithRequestBuilder(userId: UUID, includeChildren: Bool? = nil, recursive: Bool? = nil) -> RequestBuilder<[SixLinkedOrganizationUnitsDtosOrganizationUnitDto]> {
        var path = "/api/app/organization-unit/organization-units-by-user/{userId}"
        let userIdPreEscape = "\(APIHelper.mapValueToPathItem(userId))"
        let userIdPostEscape = userIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{userId}", with: userIdPostEscape, options: .literal, range: nil)
        let URLString = SixProApiAPI.basePath + path
        let parameters: [String: Any]? = nil

        var urlComponents = URLComponents(string: URLString)
        urlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "includeChildren": includeChildren?.encodeToJSON(),
            "recursive": recursive?.encodeToJSON(),
        ])

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[SixLinkedOrganizationUnitsDtosOrganizationUnitDto]>.Type = SixProApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

    /**

     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - returns: AnyPublisher<VoloAbpApplicationDtosListResultDto1SixLinkedOrganizationUnitsDtosOrganizationUnitDtoSixLinkedApplicationContractsVersion1000CultureneutralPublicKeyTokennull, Error>
     */
    #if canImport(Combine)
    @available(OSX 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiAppOrganizationUnitOrganizationUnitsGet(apiResponseQueue: DispatchQueue = SixProApiAPI.apiResponseQueue) -> AnyPublisher<VoloAbpApplicationDtosListResultDto1SixLinkedOrganizationUnitsDtosOrganizationUnitDtoSixLinkedApplicationContractsVersion1000CultureneutralPublicKeyTokennull, Error> {
        return Future<VoloAbpApplicationDtosListResultDto1SixLinkedOrganizationUnitsDtosOrganizationUnitDtoSixLinkedApplicationContractsVersion1000CultureneutralPublicKeyTokennull, Error>.init { promise in
            apiAppOrganizationUnitOrganizationUnitsGetWithRequestBuilder().execute(apiResponseQueue) { result -> Void in
                switch result {
                case let .success(response):
                    promise(.success(response.body!))
                case let .failure(error):
                    promise(.failure(error))
                }
            }
        }.eraseToAnyPublisher()
    }
    #endif

    /**
     - GET /api/app/organization-unit/organization-units
     - returns: RequestBuilder<VoloAbpApplicationDtosListResultDto1SixLinkedOrganizationUnitsDtosOrganizationUnitDtoSixLinkedApplicationContractsVersion1000CultureneutralPublicKeyTokennull> 
     */
    open class func apiAppOrganizationUnitOrganizationUnitsGetWithRequestBuilder() -> RequestBuilder<VoloAbpApplicationDtosListResultDto1SixLinkedOrganizationUnitsDtosOrganizationUnitDtoSixLinkedApplicationContractsVersion1000CultureneutralPublicKeyTokennull> {
        let path = "/api/app/organization-unit/organization-units"
        let URLString = SixProApiAPI.basePath + path
        let parameters: [String: Any]? = nil

        let urlComponents = URLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<VoloAbpApplicationDtosListResultDto1SixLinkedOrganizationUnitsDtosOrganizationUnitDtoSixLinkedApplicationContractsVersion1000CultureneutralPublicKeyTokennull>.Type = SixProApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

    /**

     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - returns: AnyPublisher<VoloAbpApplicationDtosListResultDto1SixLinkedOrganizationUnitsDtosOrganizationUnitDtoSixLinkedApplicationContractsVersion1000CultureneutralPublicKeyTokennull, Error>
     */
    #if canImport(Combine)
    @available(OSX 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiAppOrganizationUnitOrganizationUnitsWithUsersGet(apiResponseQueue: DispatchQueue = SixProApiAPI.apiResponseQueue) -> AnyPublisher<VoloAbpApplicationDtosListResultDto1SixLinkedOrganizationUnitsDtosOrganizationUnitDtoSixLinkedApplicationContractsVersion1000CultureneutralPublicKeyTokennull, Error> {
        return Future<VoloAbpApplicationDtosListResultDto1SixLinkedOrganizationUnitsDtosOrganizationUnitDtoSixLinkedApplicationContractsVersion1000CultureneutralPublicKeyTokennull, Error>.init { promise in
            apiAppOrganizationUnitOrganizationUnitsWithUsersGetWithRequestBuilder().execute(apiResponseQueue) { result -> Void in
                switch result {
                case let .success(response):
                    promise(.success(response.body!))
                case let .failure(error):
                    promise(.failure(error))
                }
            }
        }.eraseToAnyPublisher()
    }
    #endif

    /**
     - GET /api/app/organization-unit/organization-units-with-users
     - returns: RequestBuilder<VoloAbpApplicationDtosListResultDto1SixLinkedOrganizationUnitsDtosOrganizationUnitDtoSixLinkedApplicationContractsVersion1000CultureneutralPublicKeyTokennull> 
     */
    open class func apiAppOrganizationUnitOrganizationUnitsWithUsersGetWithRequestBuilder() -> RequestBuilder<VoloAbpApplicationDtosListResultDto1SixLinkedOrganizationUnitsDtosOrganizationUnitDtoSixLinkedApplicationContractsVersion1000CultureneutralPublicKeyTokennull> {
        let path = "/api/app/organization-unit/organization-units-with-users"
        let URLString = SixProApiAPI.basePath + path
        let parameters: [String: Any]? = nil

        let urlComponents = URLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<VoloAbpApplicationDtosListResultDto1SixLinkedOrganizationUnitsDtosOrganizationUnitDtoSixLinkedApplicationContractsVersion1000CultureneutralPublicKeyTokennull>.Type = SixProApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

    /**

     - parameter userId: (query)  (optional)
     - parameter organizationUnitId: (query)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - returns: AnyPublisher<Void, Error>
     */
    #if canImport(Combine)
    @available(OSX 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiAppOrganizationUnitUserFromOrganizationUnitDelete(userId: UUID? = nil, organizationUnitId: UUID? = nil, apiResponseQueue: DispatchQueue = SixProApiAPI.apiResponseQueue) -> AnyPublisher<Void, Error> {
        return Future<Void, Error>.init { promise in
            apiAppOrganizationUnitUserFromOrganizationUnitDeleteWithRequestBuilder(userId: userId, organizationUnitId: organizationUnitId).execute(apiResponseQueue) { result -> Void in
                switch result {
                case .success:
                    promise(.success(()))
                case let .failure(error):
                    promise(.failure(error))
                }
            }
        }.eraseToAnyPublisher()
    }
    #endif

    /**
     - DELETE /api/app/organization-unit/user-from-organization-unit
     - parameter userId: (query)  (optional)
     - parameter organizationUnitId: (query)  (optional)
     - returns: RequestBuilder<Void> 
     */
    open class func apiAppOrganizationUnitUserFromOrganizationUnitDeleteWithRequestBuilder(userId: UUID? = nil, organizationUnitId: UUID? = nil) -> RequestBuilder<Void> {
        let path = "/api/app/organization-unit/user-from-organization-unit"
        let URLString = SixProApiAPI.basePath + path
        let parameters: [String: Any]? = nil

        var urlComponents = URLComponents(string: URLString)
        urlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "UserId": userId?.encodeToJSON(),
            "OrganizationUnitId": organizationUnitId?.encodeToJSON(),
        ])

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SixProApiAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

    /**

     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - returns: AnyPublisher<[SixLinkedOrganizationUnitsDtosOrganizationUnitUserListDto], Error>
     */
    #if canImport(Combine)
    @available(OSX 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiAppOrganizationUnitUsersGet(apiResponseQueue: DispatchQueue = SixProApiAPI.apiResponseQueue) -> AnyPublisher<[SixLinkedOrganizationUnitsDtosOrganizationUnitUserListDto], Error> {
        return Future<[SixLinkedOrganizationUnitsDtosOrganizationUnitUserListDto], Error>.init { promise in
            apiAppOrganizationUnitUsersGetWithRequestBuilder().execute(apiResponseQueue) { result -> Void in
                switch result {
                case let .success(response):
                    promise(.success(response.body!))
                case let .failure(error):
                    promise(.failure(error))
                }
            }
        }.eraseToAnyPublisher()
    }
    #endif

    /**
     - GET /api/app/organization-unit/users
     - returns: RequestBuilder<[SixLinkedOrganizationUnitsDtosOrganizationUnitUserListDto]> 
     */
    open class func apiAppOrganizationUnitUsersGetWithRequestBuilder() -> RequestBuilder<[SixLinkedOrganizationUnitsDtosOrganizationUnitUserListDto]> {
        let path = "/api/app/organization-unit/users"
        let URLString = SixProApiAPI.basePath + path
        let parameters: [String: Any]? = nil

        let urlComponents = URLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<[SixLinkedOrganizationUnitsDtosOrganizationUnitUserListDto]>.Type = SixProApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

    /**

     - parameter sixLinkedOrganizationUnitsDtosUsersToOrganizationUnitInput: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - returns: AnyPublisher<Void, Error>
     */
    #if canImport(Combine)
    @available(OSX 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiAppOrganizationUnitUsersToOrganizationUnitPost(sixLinkedOrganizationUnitsDtosUsersToOrganizationUnitInput: SixLinkedOrganizationUnitsDtosUsersToOrganizationUnitInput? = nil, apiResponseQueue: DispatchQueue = SixProApiAPI.apiResponseQueue) -> AnyPublisher<Void, Error> {
        return Future<Void, Error>.init { promise in
            apiAppOrganizationUnitUsersToOrganizationUnitPostWithRequestBuilder(sixLinkedOrganizationUnitsDtosUsersToOrganizationUnitInput: sixLinkedOrganizationUnitsDtosUsersToOrganizationUnitInput).execute(apiResponseQueue) { result -> Void in
                switch result {
                case .success:
                    promise(.success(()))
                case let .failure(error):
                    promise(.failure(error))
                }
            }
        }.eraseToAnyPublisher()
    }
    #endif

    /**
     - POST /api/app/organization-unit/users-to-organization-unit
     - parameter sixLinkedOrganizationUnitsDtosUsersToOrganizationUnitInput: (body)  (optional)
     - returns: RequestBuilder<Void> 
     */
    open class func apiAppOrganizationUnitUsersToOrganizationUnitPostWithRequestBuilder(sixLinkedOrganizationUnitsDtosUsersToOrganizationUnitInput: SixLinkedOrganizationUnitsDtosUsersToOrganizationUnitInput? = nil) -> RequestBuilder<Void> {
        let path = "/api/app/organization-unit/users-to-organization-unit"
        let URLString = SixProApiAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: sixLinkedOrganizationUnitsDtosUsersToOrganizationUnitInput)

        let urlComponents = URLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SixProApiAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

    /**

     - parameter organizationUnitId: (query)  (optional)
     - parameter userId: (query)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - returns: AnyPublisher<Void, Error>
     */
    #if canImport(Combine)
    @available(OSX 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func organizationUnitsOrganizationUnitAddUserPost(organizationUnitId: UUID? = nil, userId: UUID? = nil, apiResponseQueue: DispatchQueue = SixProApiAPI.apiResponseQueue) -> AnyPublisher<Void, Error> {
        return Future<Void, Error>.init { promise in
            organizationUnitsOrganizationUnitAddUserPostWithRequestBuilder(organizationUnitId: organizationUnitId, userId: userId).execute(apiResponseQueue) { result -> Void in
                switch result {
                case .success:
                    promise(.success(()))
                case let .failure(error):
                    promise(.failure(error))
                }
            }
        }.eraseToAnyPublisher()
    }
    #endif

    /**
     - POST /OrganizationUnits/OrganizationUnit/AddUser
     - parameter organizationUnitId: (query)  (optional)
     - parameter userId: (query)  (optional)
     - returns: RequestBuilder<Void> 
     */
    open class func organizationUnitsOrganizationUnitAddUserPostWithRequestBuilder(organizationUnitId: UUID? = nil, userId: UUID? = nil) -> RequestBuilder<Void> {
        let path = "/OrganizationUnits/OrganizationUnit/AddUser"
        let URLString = SixProApiAPI.basePath + path
        let parameters: [String: Any]? = nil

        var urlComponents = URLComponents(string: URLString)
        urlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "OrganizationUnitId": organizationUnitId?.encodeToJSON(),
            "UserId": userId?.encodeToJSON(),
        ])

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SixProApiAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

    /**

     - parameter parentId: (query)  (optional)
     - parameter displayName: (query)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - returns: AnyPublisher<Void, Error>
     */
    #if canImport(Combine)
    @available(OSX 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func organizationUnitsOrganizationUnitCreatePost(parentId: UUID? = nil, displayName: String? = nil, apiResponseQueue: DispatchQueue = SixProApiAPI.apiResponseQueue) -> AnyPublisher<Void, Error> {
        return Future<Void, Error>.init { promise in
            organizationUnitsOrganizationUnitCreatePostWithRequestBuilder(parentId: parentId, displayName: displayName).execute(apiResponseQueue) { result -> Void in
                switch result {
                case .success:
                    promise(.success(()))
                case let .failure(error):
                    promise(.failure(error))
                }
            }
        }.eraseToAnyPublisher()
    }
    #endif

    /**
     - POST /OrganizationUnits/OrganizationUnit/create
     - parameter parentId: (query)  (optional)
     - parameter displayName: (query)  (optional)
     - returns: RequestBuilder<Void> 
     */
    open class func organizationUnitsOrganizationUnitCreatePostWithRequestBuilder(parentId: UUID? = nil, displayName: String? = nil) -> RequestBuilder<Void> {
        let path = "/OrganizationUnits/OrganizationUnit/create"
        let URLString = SixProApiAPI.basePath + path
        let parameters: [String: Any]? = nil

        var urlComponents = URLComponents(string: URLString)
        urlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "ParentId": parentId?.encodeToJSON(),
            "DisplayName": displayName?.encodeToJSON(),
        ])

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SixProApiAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

    /**

     - parameter id: (query)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - returns: AnyPublisher<Void, Error>
     */
    #if canImport(Combine)
    @available(OSX 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func organizationUnitsOrganizationUnitDeletePost(id: UUID? = nil, apiResponseQueue: DispatchQueue = SixProApiAPI.apiResponseQueue) -> AnyPublisher<Void, Error> {
        return Future<Void, Error>.init { promise in
            organizationUnitsOrganizationUnitDeletePostWithRequestBuilder(id: id).execute(apiResponseQueue) { result -> Void in
                switch result {
                case .success:
                    promise(.success(()))
                case let .failure(error):
                    promise(.failure(error))
                }
            }
        }.eraseToAnyPublisher()
    }
    #endif

    /**
     - POST /OrganizationUnits/OrganizationUnit/delete
     - parameter id: (query)  (optional)
     - returns: RequestBuilder<Void> 
     */
    open class func organizationUnitsOrganizationUnitDeletePostWithRequestBuilder(id: UUID? = nil) -> RequestBuilder<Void> {
        let path = "/OrganizationUnits/OrganizationUnit/delete"
        let URLString = SixProApiAPI.basePath + path
        let parameters: [String: Any]? = nil

        var urlComponents = URLComponents(string: URLString)
        urlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "id": id?.encodeToJSON(),
        ])

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SixProApiAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

    /**

     - parameter id: (query)  (optional)
     - parameter displayName: (query)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - returns: AnyPublisher<Void, Error>
     */
    #if canImport(Combine)
    @available(OSX 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func organizationUnitsOrganizationUnitUpdatePost(id: UUID? = nil, displayName: String? = nil, apiResponseQueue: DispatchQueue = SixProApiAPI.apiResponseQueue) -> AnyPublisher<Void, Error> {
        return Future<Void, Error>.init { promise in
            organizationUnitsOrganizationUnitUpdatePostWithRequestBuilder(id: id, displayName: displayName).execute(apiResponseQueue) { result -> Void in
                switch result {
                case .success:
                    promise(.success(()))
                case let .failure(error):
                    promise(.failure(error))
                }
            }
        }.eraseToAnyPublisher()
    }
    #endif

    /**
     - POST /OrganizationUnits/OrganizationUnit/update
     - parameter id: (query)  (optional)
     - parameter displayName: (query)  (optional)
     - returns: RequestBuilder<Void> 
     */
    open class func organizationUnitsOrganizationUnitUpdatePostWithRequestBuilder(id: UUID? = nil, displayName: String? = nil) -> RequestBuilder<Void> {
        let path = "/OrganizationUnits/OrganizationUnit/update"
        let URLString = SixProApiAPI.basePath + path
        let parameters: [String: Any]? = nil

        var urlComponents = URLComponents(string: URLString)
        urlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "Id": id?.encodeToJSON(),
            "DisplayName": displayName?.encodeToJSON(),
        ])

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SixProApiAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

}
