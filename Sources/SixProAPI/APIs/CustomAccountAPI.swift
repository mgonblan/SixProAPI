//
// CustomAccountAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(Combine)
import Combine
#endif

open class CustomAccountAPI {
    /**

     - parameter sixLinkedAccountDtosRegisterCompanyDto: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - returns: AnyPublisher<VoloAbpIdentityIdentityUserDto, Error>
     */
    #if canImport(Combine)
    @available(OSX 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiAppCustomAccountRegisterCompanyPost(sixLinkedAccountDtosRegisterCompanyDto: SixLinkedAccountDtosRegisterCompanyDto? = nil, apiResponseQueue: DispatchQueue = SixProApiAPI.apiResponseQueue) -> AnyPublisher<VoloAbpIdentityIdentityUserDto, Error> {
        return Future<VoloAbpIdentityIdentityUserDto, Error>.init { promise in
            apiAppCustomAccountRegisterCompanyPostWithRequestBuilder(sixLinkedAccountDtosRegisterCompanyDto: sixLinkedAccountDtosRegisterCompanyDto).execute(apiResponseQueue) { result -> Void in
                switch result {
                case let .success(response):
                    promise(.success(response.body!))
                case let .failure(error):
                    promise(.failure(error))
                }
            }
        }.eraseToAnyPublisher()
    }
    #endif

    /**
     - POST /api/app/custom-account/register-company
     - parameter sixLinkedAccountDtosRegisterCompanyDto: (body)  (optional)
     - returns: RequestBuilder<VoloAbpIdentityIdentityUserDto> 
     */
    open class func apiAppCustomAccountRegisterCompanyPostWithRequestBuilder(sixLinkedAccountDtosRegisterCompanyDto: SixLinkedAccountDtosRegisterCompanyDto? = nil) -> RequestBuilder<VoloAbpIdentityIdentityUserDto> {
        let path = "/api/app/custom-account/register-company"
        let URLString = SixProApiAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: sixLinkedAccountDtosRegisterCompanyDto)

        let urlComponents = URLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<VoloAbpIdentityIdentityUserDto>.Type = SixProApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

    /**

     - parameter sixLinkedAccountDtosRegisterContractorDto: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - returns: AnyPublisher<VoloAbpIdentityIdentityUserDto, Error>
     */
    #if canImport(Combine)
    @available(OSX 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiAppCustomAccountRegisterContractorPost(sixLinkedAccountDtosRegisterContractorDto: SixLinkedAccountDtosRegisterContractorDto? = nil, apiResponseQueue: DispatchQueue = SixProApiAPI.apiResponseQueue) -> AnyPublisher<VoloAbpIdentityIdentityUserDto, Error> {
        return Future<VoloAbpIdentityIdentityUserDto, Error>.init { promise in
            apiAppCustomAccountRegisterContractorPostWithRequestBuilder(sixLinkedAccountDtosRegisterContractorDto: sixLinkedAccountDtosRegisterContractorDto).execute(apiResponseQueue) { result -> Void in
                switch result {
                case let .success(response):
                    promise(.success(response.body!))
                case let .failure(error):
                    promise(.failure(error))
                }
            }
        }.eraseToAnyPublisher()
    }
    #endif

    /**
     - POST /api/app/custom-account/register-contractor
     - parameter sixLinkedAccountDtosRegisterContractorDto: (body)  (optional)
     - returns: RequestBuilder<VoloAbpIdentityIdentityUserDto> 
     */
    open class func apiAppCustomAccountRegisterContractorPostWithRequestBuilder(sixLinkedAccountDtosRegisterContractorDto: SixLinkedAccountDtosRegisterContractorDto? = nil) -> RequestBuilder<VoloAbpIdentityIdentityUserDto> {
        let path = "/api/app/custom-account/register-contractor"
        let URLString = SixProApiAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: sixLinkedAccountDtosRegisterContractorDto)

        let urlComponents = URLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<VoloAbpIdentityIdentityUserDto>.Type = SixProApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

    /**

     - parameter voloAbpAccountRegisterDto: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - returns: AnyPublisher<VoloAbpIdentityIdentityUserDto, Error>
     */
    #if canImport(Combine)
    @available(OSX 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiAppCustomAccountRegisterPost(voloAbpAccountRegisterDto: VoloAbpAccountRegisterDto? = nil, apiResponseQueue: DispatchQueue = SixProApiAPI.apiResponseQueue) -> AnyPublisher<VoloAbpIdentityIdentityUserDto, Error> {
        return Future<VoloAbpIdentityIdentityUserDto, Error>.init { promise in
            apiAppCustomAccountRegisterPostWithRequestBuilder(voloAbpAccountRegisterDto: voloAbpAccountRegisterDto).execute(apiResponseQueue) { result -> Void in
                switch result {
                case let .success(response):
                    promise(.success(response.body!))
                case let .failure(error):
                    promise(.failure(error))
                }
            }
        }.eraseToAnyPublisher()
    }
    #endif

    /**
     - POST /api/app/custom-account/register
     - parameter voloAbpAccountRegisterDto: (body)  (optional)
     - returns: RequestBuilder<VoloAbpIdentityIdentityUserDto> 
     */
    open class func apiAppCustomAccountRegisterPostWithRequestBuilder(voloAbpAccountRegisterDto: VoloAbpAccountRegisterDto? = nil) -> RequestBuilder<VoloAbpIdentityIdentityUserDto> {
        let path = "/api/app/custom-account/register"
        let URLString = SixProApiAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: voloAbpAccountRegisterDto)

        let urlComponents = URLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<VoloAbpIdentityIdentityUserDto>.Type = SixProApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

    /**

     - parameter voloAbpAccountResetPasswordDto: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - returns: AnyPublisher<Void, Error>
     */
    #if canImport(Combine)
    @available(OSX 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiAppCustomAccountResetPasswordPost(voloAbpAccountResetPasswordDto: VoloAbpAccountResetPasswordDto? = nil, apiResponseQueue: DispatchQueue = SixProApiAPI.apiResponseQueue) -> AnyPublisher<Void, Error> {
        return Future<Void, Error>.init { promise in
            apiAppCustomAccountResetPasswordPostWithRequestBuilder(voloAbpAccountResetPasswordDto: voloAbpAccountResetPasswordDto).execute(apiResponseQueue) { result -> Void in
                switch result {
                case .success:
                    promise(.success(()))
                case let .failure(error):
                    promise(.failure(error))
                }
            }
        }.eraseToAnyPublisher()
    }
    #endif

    /**
     - POST /api/app/custom-account/reset-password
     - parameter voloAbpAccountResetPasswordDto: (body)  (optional)
     - returns: RequestBuilder<Void> 
     */
    open class func apiAppCustomAccountResetPasswordPostWithRequestBuilder(voloAbpAccountResetPasswordDto: VoloAbpAccountResetPasswordDto? = nil) -> RequestBuilder<Void> {
        let path = "/api/app/custom-account/reset-password"
        let URLString = SixProApiAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: voloAbpAccountResetPasswordDto)

        let urlComponents = URLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SixProApiAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

    /**

     - parameter voloAbpAccountSendPasswordResetCodeDto: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - returns: AnyPublisher<Void, Error>
     */
    #if canImport(Combine)
    @available(OSX 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiAppCustomAccountSendPasswordResetCodePost(voloAbpAccountSendPasswordResetCodeDto: VoloAbpAccountSendPasswordResetCodeDto? = nil, apiResponseQueue: DispatchQueue = SixProApiAPI.apiResponseQueue) -> AnyPublisher<Void, Error> {
        return Future<Void, Error>.init { promise in
            apiAppCustomAccountSendPasswordResetCodePostWithRequestBuilder(voloAbpAccountSendPasswordResetCodeDto: voloAbpAccountSendPasswordResetCodeDto).execute(apiResponseQueue) { result -> Void in
                switch result {
                case .success:
                    promise(.success(()))
                case let .failure(error):
                    promise(.failure(error))
                }
            }
        }.eraseToAnyPublisher()
    }
    #endif

    /**
     - POST /api/app/custom-account/send-password-reset-code
     - parameter voloAbpAccountSendPasswordResetCodeDto: (body)  (optional)
     - returns: RequestBuilder<Void> 
     */
    open class func apiAppCustomAccountSendPasswordResetCodePostWithRequestBuilder(voloAbpAccountSendPasswordResetCodeDto: VoloAbpAccountSendPasswordResetCodeDto? = nil) -> RequestBuilder<Void> {
        let path = "/api/app/custom-account/send-password-reset-code"
        let URLString = SixProApiAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: voloAbpAccountSendPasswordResetCodeDto)

        let urlComponents = URLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = SixProApiAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

}
